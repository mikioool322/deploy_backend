/*
 * This file is generated by jOOQ.
 */
package com.pl.sggw.tinder.jooq.tables.records


import com.pl.sggw.tinder.jooq.tables.UserPreferences

import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class UserPreferencesRecord() : TableRecordImpl<UserPreferencesRecord>(UserPreferences.USER_PREFERENCES), Record6<String?, String?, Short?, Short?, LocalDateTime?, LocalDateTime?> {

    var userEmail: String?
        set(value) = set(0, value)
        get() = get(0) as String?

    var gender: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var minAge: Short?
        set(value) = set(2, value)
        get() = get(2) as Short?

    var maxAge: Short?
        set(value) = set(3, value)
        get() = get(3) as Short?

    var creationTimestamp: LocalDateTime?
        set(value) = set(4, value)
        get() = get(4) as LocalDateTime?

    var modificationTimestamp: LocalDateTime?
        set(value) = set(5, value)
        get() = get(5) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row6<String?, String?, Short?, Short?, LocalDateTime?, LocalDateTime?> = super.fieldsRow() as Row6<String?, String?, Short?, Short?, LocalDateTime?, LocalDateTime?>
    override fun valuesRow(): Row6<String?, String?, Short?, Short?, LocalDateTime?, LocalDateTime?> = super.valuesRow() as Row6<String?, String?, Short?, Short?, LocalDateTime?, LocalDateTime?>
    override fun field1(): Field<String?> = UserPreferences.USER_PREFERENCES.USER_EMAIL
    override fun field2(): Field<String?> = UserPreferences.USER_PREFERENCES.GENDER
    override fun field3(): Field<Short?> = UserPreferences.USER_PREFERENCES.MIN_AGE
    override fun field4(): Field<Short?> = UserPreferences.USER_PREFERENCES.MAX_AGE
    override fun field5(): Field<LocalDateTime?> = UserPreferences.USER_PREFERENCES.CREATION_TIMESTAMP
    override fun field6(): Field<LocalDateTime?> = UserPreferences.USER_PREFERENCES.MODIFICATION_TIMESTAMP
    override fun component1(): String? = userEmail
    override fun component2(): String? = gender
    override fun component3(): Short? = minAge
    override fun component4(): Short? = maxAge
    override fun component5(): LocalDateTime? = creationTimestamp
    override fun component6(): LocalDateTime? = modificationTimestamp
    override fun value1(): String? = userEmail
    override fun value2(): String? = gender
    override fun value3(): Short? = minAge
    override fun value4(): Short? = maxAge
    override fun value5(): LocalDateTime? = creationTimestamp
    override fun value6(): LocalDateTime? = modificationTimestamp

    override fun value1(value: String?): UserPreferencesRecord {
        this.userEmail = value
        return this
    }

    override fun value2(value: String?): UserPreferencesRecord {
        this.gender = value
        return this
    }

    override fun value3(value: Short?): UserPreferencesRecord {
        this.minAge = value
        return this
    }

    override fun value4(value: Short?): UserPreferencesRecord {
        this.maxAge = value
        return this
    }

    override fun value5(value: LocalDateTime?): UserPreferencesRecord {
        this.creationTimestamp = value
        return this
    }

    override fun value6(value: LocalDateTime?): UserPreferencesRecord {
        this.modificationTimestamp = value
        return this
    }

    override fun values(value1: String?, value2: String?, value3: Short?, value4: Short?, value5: LocalDateTime?, value6: LocalDateTime?): UserPreferencesRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        return this
    }

    /**
     * Create a detached, initialised UserPreferencesRecord
     */
    constructor(userEmail: String? = null, gender: String? = null, minAge: Short? = null, maxAge: Short? = null, creationTimestamp: LocalDateTime? = null, modificationTimestamp: LocalDateTime? = null): this() {
        this.userEmail = userEmail
        this.gender = gender
        this.minAge = minAge
        this.maxAge = maxAge
        this.creationTimestamp = creationTimestamp
        this.modificationTimestamp = modificationTimestamp
    }
}
