/*
 * This file is generated by jOOQ.
 */
package com.pl.sggw.tinder.jooq.tables.records


import com.pl.sggw.tinder.jooq.tables.UserMatchDecition

import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class UserMatchDecitionRecord() : UpdatableRecordImpl<UserMatchDecitionRecord>(UserMatchDecition.USER_MATCH_DECITION), Record6<Long?, Long?, Long?, Boolean?, LocalDateTime?, LocalDateTime?> {

    var id: Long?
        set(value) = set(0, value)
        get() = get(0) as Long?

    var selectingUserId: Long?
        set(value) = set(1, value)
        get() = get(1) as Long?

    var selectedUserId: Long?
        set(value) = set(2, value)
        get() = get(2) as Long?

    var selectedUserApproved: Boolean?
        set(value) = set(3, value)
        get() = get(3) as Boolean?

    var creationTimestamp: LocalDateTime?
        set(value) = set(4, value)
        get() = get(4) as LocalDateTime?

    var modificationTimestamp: LocalDateTime?
        set(value) = set(5, value)
        get() = get(5) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row6<Long?, Long?, Long?, Boolean?, LocalDateTime?, LocalDateTime?> = super.fieldsRow() as Row6<Long?, Long?, Long?, Boolean?, LocalDateTime?, LocalDateTime?>
    override fun valuesRow(): Row6<Long?, Long?, Long?, Boolean?, LocalDateTime?, LocalDateTime?> = super.valuesRow() as Row6<Long?, Long?, Long?, Boolean?, LocalDateTime?, LocalDateTime?>
    override fun field1(): Field<Long?> = UserMatchDecition.USER_MATCH_DECITION.ID
    override fun field2(): Field<Long?> = UserMatchDecition.USER_MATCH_DECITION.SELECTING_USER_ID
    override fun field3(): Field<Long?> = UserMatchDecition.USER_MATCH_DECITION.SELECTED_USER_ID
    override fun field4(): Field<Boolean?> = UserMatchDecition.USER_MATCH_DECITION.SELECTED_USER_APPROVED
    override fun field5(): Field<LocalDateTime?> = UserMatchDecition.USER_MATCH_DECITION.CREATION_TIMESTAMP
    override fun field6(): Field<LocalDateTime?> = UserMatchDecition.USER_MATCH_DECITION.MODIFICATION_TIMESTAMP
    override fun component1(): Long? = id
    override fun component2(): Long? = selectingUserId
    override fun component3(): Long? = selectedUserId
    override fun component4(): Boolean? = selectedUserApproved
    override fun component5(): LocalDateTime? = creationTimestamp
    override fun component6(): LocalDateTime? = modificationTimestamp
    override fun value1(): Long? = id
    override fun value2(): Long? = selectingUserId
    override fun value3(): Long? = selectedUserId
    override fun value4(): Boolean? = selectedUserApproved
    override fun value5(): LocalDateTime? = creationTimestamp
    override fun value6(): LocalDateTime? = modificationTimestamp

    override fun value1(value: Long?): UserMatchDecitionRecord {
        this.id = value
        return this
    }

    override fun value2(value: Long?): UserMatchDecitionRecord {
        this.selectingUserId = value
        return this
    }

    override fun value3(value: Long?): UserMatchDecitionRecord {
        this.selectedUserId = value
        return this
    }

    override fun value4(value: Boolean?): UserMatchDecitionRecord {
        this.selectedUserApproved = value
        return this
    }

    override fun value5(value: LocalDateTime?): UserMatchDecitionRecord {
        this.creationTimestamp = value
        return this
    }

    override fun value6(value: LocalDateTime?): UserMatchDecitionRecord {
        this.modificationTimestamp = value
        return this
    }

    override fun values(value1: Long?, value2: Long?, value3: Long?, value4: Boolean?, value5: LocalDateTime?, value6: LocalDateTime?): UserMatchDecitionRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        return this
    }

    /**
     * Create a detached, initialised UserMatchDecitionRecord
     */
    constructor(id: Long? = null, selectingUserId: Long? = null, selectedUserId: Long? = null, selectedUserApproved: Boolean? = null, creationTimestamp: LocalDateTime? = null, modificationTimestamp: LocalDateTime? = null): this() {
        this.id = id
        this.selectingUserId = selectingUserId
        this.selectedUserId = selectedUserId
        this.selectedUserApproved = selectedUserApproved
        this.creationTimestamp = creationTimestamp
        this.modificationTimestamp = modificationTimestamp
    }
}
